package basic;

public class Chapter6 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		/*
		 * 그래프(graph) 자료구조의 일종
		 * 그래프는 정점(node,vertex)와 간선(edge)로 구성됨. 
		 * 간선은 정점간의 관계를 나타낸다.
		 * G = (V,E)
		 * 경로 : 정점 A에서 다른 정점 B로 가는 경로
		 * 사이클 : 정점 A에서 다시 A로 오는 경로
		 * 
		 *  단순 경로/단순 사이클 : 같은 정점을 두번 방문하지 않는 경로/사이클
		 *  
		 *  방향 있는 그래프(directed graph) : 간선에 방향이 있는 그래프
		 *  방향 없는 그래프(양방향 그래프) : 간선에 방향이 없는 그래프
		 *  간선이 여러개(multiple edge) : 두 정점 사이에 간선이 여러개 있는 것.
		 *  루프 : 간선의 양 끝점이 같은 정점인것.
		 *  가중치(weight) : 정점 A에서 B로 이동에 필요한 비용
		 *  그래프의 차수(degree) : 정점과 연결되어있는 간선의 개수
		 *  
		 *  정점으로 들어오는 간선의 차수 = in-degre
		 *  정점에서 나가는 간선의 개수 = out- degree
		 *  
		 *  그래프의 탐색 : 모든 정점을 1번씩 방문
		 *  DFS(깊이우선탐색) - 최대한 깊게 많이, 스택 사용
		 *  	스택을 사용해서 갈수 있는 만큼 최대한 가면서 스택에 정점을 저장. 더이상 갈 수 없으면 이전 정점으로 이동.
		 *  BFS(너비우선탐색) - 최대한 넓게 많이, 큐 사용, 만약 모든 간선의 가중치가 1이라면, 최단거리 탐색 알고리즘이 되버림.
		 *  	큐를 이용해서 현재 정점에서 연결된 애들 모두 탐색하고 큐에 넣기전에 방문했다고 체크하고 큐에 저장
		 *  	한번 씩만 방문하기 때문에 체크배열이 트루인 애들은 안가도됨.
		 */
	}

}
